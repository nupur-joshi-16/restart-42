16. Hello World

----

Functions and Execution Flow

Function Definition: A function is a procedureâ€”a sequence of instructions to execute in order.
Keyword: Every Rust function begins with the function keyword,`fn`.
Naming: Functions are declared with a distinct name (case-sensitive).
Entry Point: Every Rust program must have a function called `main` (all lowercase). The main function is the `entry point` and is executed first.
Execution Terminology: Executing a function is called `calling the function` or `invoking the function`.
Parameters: The parentheses () after the function name are where we declare `parameters` (an input to a function).
Body: The function body is defined by a pair of `curly braces {}`. This creates a `block` (a section of code).

----

Output and Data Types

What is a Macro?
A `macro` is a system that writes code for you (like "code that writes code") at compile time. Macros are distinguished from functions by an `exclamation mark (!)` immediately following the name (e.g., `println!`).

What is a String?
A `string` is the technical term for a piece of text, a collection of characters in order. In Rust code, strings are typically enclosed in **double quotes** (e.g., "Hello World!").

----

Final Code Example

fn main() {
    println!("Hello World!");
}
